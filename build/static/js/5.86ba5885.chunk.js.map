{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","order","id","Component","connect","state","auth","dispatch","actionTypes","withErrorHandler","axios"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yHCuCXC,EApCD,SAAAC,GACZ,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACvC,OACE,0BACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKP,EAAGJ,MAEPI,EAAGJ,KAVN,KAUcI,EAAGH,OAVjB,OAeJ,OACE,yBAAKW,UAAWC,IAAQlB,OACtB,2CAAiBO,GACjB,qCACS,uCAAaY,OAAOC,WAAWnB,EAAMoB,OAAOC,QAAQ,O,gCC1B7DC,E,4LAEFC,KAAKvB,MAAMwB,cAAcD,KAAKvB,MAAMyB,MAAOF,KAAKvB,MAAM0B,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAUb,OATKL,KAAKvB,MAAM6B,UACdF,EAASJ,KAAKvB,MAAM2B,OAAOpB,IAAI,SAAAuB,GAAK,OAClC,kBAAC,EAAD,CACEf,IAAKe,EAAMC,GACX9B,YAAa6B,EAAM7B,YACnBmB,MAAOU,EAAMV,WAIZ,6BAAMO,O,GAhBIK,aAoCNC,sBAhBS,SAAAC,GACtB,MAAO,CACLP,OAAQO,EAAMJ,MAAMH,OACpBE,QAASK,EAAMJ,MAAMD,QACrBJ,MAAOS,EAAMC,KAAKV,MAClBC,OAAQQ,EAAMC,KAAKT,SAII,SAAAU,GACzB,MAAO,CACLZ,cAAe,SAACC,EAAOC,GAAR,OACbU,EAASC,IAAwBZ,EAAOC,OAI/BO,CAGbK,YAAiBhB,EAAQiB","file":"static/js/5.86ba5885.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from \"react\";\n\nimport classes from \"./Order.module.css\";\n\nconst Order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        }}\n        key={ig.name}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className={classes.Order}>\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\nexport default Order;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-order\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actionTypes from \"../../store/actions/index\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => (\n        <Order\n          key={order.id}\n          ingredients={order.ingredients}\n          price={order.price}\n        />\n      ));\n    }\n    return <div>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(actionTypes.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}